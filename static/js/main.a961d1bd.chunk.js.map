{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","Component","constructor","super","handleChange","event","target","value","this","setState","onFormSubmit","preventDefault","handleSubmit","state","initialState","render","onSubmit","for","type","id","onChange","App","characters","filter","character","i","className","ReactDOM","document","getElementById"],"mappings":"gKAEA,MAAMA,EAAc,IAEZ,gCACI,+BACI,sCACA,qCACA,6CAMVC,EAAYC,IACd,MAAMC,EAAOD,EAAME,cAAcC,KAAI,CAACC,EAAKC,IAEnC,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BAAI,wBAAQC,QAAS,IAAMR,EAAMS,gBAAgBJ,GAA7C,wBAHCA,KAQjB,OAAO,gCAAQJ,KAaJS,MAVAV,IAAW,MACdE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBACnB,OACI,kCACI,cAACX,EAAD,IACA,cAACC,EAAD,CAAWG,cAAeA,EAAeO,gBAAiBA,QC/B1E,MAAME,UAAaC,YACfC,YAAYb,GACRc,MAAMd,GADS,KAWnBe,aAAeC,IAAU,MAAD,EACIA,EAAMC,OAAtBX,EADY,EACZA,KAAMY,EADM,EACNA,MAEdC,KAAKC,SAAS,CACV,CAACd,GAAQY,KAfE,KAmBnBG,aAAgBL,IACZA,EAAMM,iBAENH,KAAKnB,MAAMuB,aAAaJ,KAAKK,OAC7BL,KAAKC,SAASD,KAAKM,eApBnBN,KAAKM,aAAe,CAChBnB,KAAM,GACNC,IAAK,IAGTY,KAAKK,MAAQL,KAAKM,aAkBtBC,SAAU,MAAD,EACiBP,KAAKK,MAAnBlB,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACI,uBAAMoB,SAAUR,KAAKE,aAArB,UACI,uBAAOO,IAAI,OAAX,kBACA,uBACIC,KAAK,OACLvB,KAAK,OACLwB,GAAG,OACHZ,MAAOZ,EACPyB,SAAUZ,KAAKJ,eACnB,uBAAOa,IAAI,MAAX,iBACA,uBACIC,KAAK,OACLvB,KAAK,MACLwB,GAAG,MACHZ,MAAOX,EACPwB,SAAUZ,KAAKJ,eACnB,wBAAQc,KAAK,SAAb,wBAQDlB,QCpDf,MAAMqB,UAAYpB,YAAW,eAAD,oBACxBY,MAAQ,CACJS,WAAY,IAFQ,KAKxBxB,gBAAkBJ,IAAU,MAChB4B,EAAed,KAAKK,MAApBS,WAERd,KAAKC,SAAS,CACVa,WAAYA,EAAWC,QAAO,CAACC,EAAWC,IAC/BA,IAAM/B,OAVD,KAexBkB,aAAeY,IACXhB,KAAKC,SAAS,CAACa,WAAY,IAAId,KAAKK,MAAMS,WAAYE,MAG1DT,SAAU,MACEO,EAAed,KAAKK,MAApBS,WAER,OACI,sBAAKI,UAAU,YAAf,UACI,gDACA,oFACA,cAAC,EAAD,CACInC,cAAe+B,EACfxB,gBAAiBU,KAAKV,kBAE1B,yCACA,cAAC,EAAD,CAAMc,aAAcJ,KAAKI,mBAM1BS,Q,KCpCfM,IAASZ,OAAO,cAAC,EAAD,IAASa,SAASC,eAAe,U","file":"static/js/main.a961d1bd.chunk.js","sourcesContent":["import React from 'react';\n\nconst TableHeader = () => { \n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n                <th>Remove</th>\n            </tr>\n        </thead>\n    );\n}\n\nconst TableBody = props => { \n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td><button onClick={() => props.removeCharacter(index)}>Delete</button></td>\n            </tr>\n        );\n    });\n\n    return <tbody>{rows}</tbody>;\n}\n\nconst Table = (props) => {\n    const { characterData, removeCharacter } = props;\n        return (\n            <table>\n                <TableHeader />\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n            </table>\n        );\n}\n\nexport default Table;","import React, {Component} from 'react';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.initialState = {\n            name: '',\n            job: ''\n        };\n\n        this.state = this.initialState;\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name] : value\n        });\n    }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        \n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n    render() {\n        const { name, job } = this.state; \n\n        return (\n            <form onSubmit={this.onFormSubmit}>\n                <label for=\"name\">Name</label>\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    id=\"name\"\n                    value={name} \n                    onChange={this.handleChange} />\n                <label for=\"job\">Job</label>\n                <input \n                    type=\"text\" \n                    name=\"job\" \n                    id=\"job\"\n                    value={job} \n                    onChange={this.handleChange} />\n                <button type=\"submit\">\n                    Submit\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component {\n    state = {\n        characters: []\n    };\n\n    removeCharacter = index => {\n        const { characters } = this.state;\n    \n        this.setState({\n            characters: characters.filter((character, i) => { \n                return i !== index;\n            })\n        });\n    }\n\n    handleSubmit = character => {\n        this.setState({characters: [...this.state.characters, character]});\n    }\n\n    render() {\n        const { characters } = this.state;\n        \n        return (\n            <div className=\"container\">\n                <h1>React Tutorial</h1>\n                <p>Add a character with a name and a job to the table.</p>\n                <Table\n                    characterData={characters}\n                    removeCharacter={this.removeCharacter}\n                />\n                <h3>Add New</h3>\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}